{"version":3,"sources":["serviceWorker.js","Home/index.js","game/index.js","info/index.js","index.js"],"names":["Boolean","window","location","hostname","match","Home","props","state","gameID","joinGameInput","gameIDtoJoin","gameExists","submitted","bothJoined","changeValue","bind","searchGame","startGame","console","log","this","setState","fetch","then","response","json","data","result","game_id","e","target","value","history","push","pathname","mode","method","headers","body","JSON","stringify","res","online","className","onClick","createGame","joinGame","type","name","id","placeholder","onChange","to","href","Component","url","protocol","document","domain","port","socket","io","connect","Square","Board","squares","xIsNext","enableRestart","getBoard","on","updateBoard","toaster","notify","duration","pos","position","updatedSquares","player","next","calculateWinner","board","emit","i","slice","handleClick","status","winner","renderSquare","restartGame","React","Game","lines","length","a","b","c","includes","App","undefined","connected","Info","createBrowserHistory","Main","path","component","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fd774656.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport './index.css';\nclass Home extends Component{\n    constructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n            gameID: null,\n            joinGameInput: false,\n            gameIDtoJoin: null,\n            gameExists: true,\n            submitted: false,\n            bothJoined: false\n        };\n        this.changeValue = this.changeValue.bind(this);\n        this.searchGame = this.searchGame.bind(this);\n        this.startGame = this.startGame.bind(this);\n\t}\n    createGame(){\n        console.log('Creating Game');\n        this.setState({joinGameInput: false})\n        fetch('/api/create/game')\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tif (data.result === 'success') {\n                    this.setState({gameID: data.game_id});\n\t\t\t\t}\n\t\t\t});\n    }\n\n    joinGame(){\n        this.setState({joinGameInput: !this.state.joinGameInput});\n    }\n\n    changeValue(e){\n        this.setState({gameIDtoJoin: e.target.value})\n    }\n    startGame(){\n        this.props.history.push({\n            pathname: '/Game',\n            state: {\n                gameID: this.state.gameID,\n                mode: 'create'\n            }\n        })\n    }\n    searchGame(){\n        this.setState({submitted: true})\n        fetch('/api/search/game', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ game_id: this.state.gameIDtoJoin }),\n        }).then(res => res.json())\n            .then(res => {\n                console.log(res)\n                if (res.result === 'fail') {\n                    console.log('Game doesnt exist')\n                    this.setState({gameExists: false, bothJoined: false})\n                } else if (res.result === 'success') {\n                    this.setState({gameExists: true})\n                    if (res.online !== 2) {\n                        this.props.history.push({\n                            pathname: '/Game',\n                            state: {\n                                gameID: this.state.gameIDtoJoin,\n                                mode: 'join'\n                            }\n                        })\n                    } else {\n                        this.setState({bothJoined: true})\n                    }\n                    \n                }\n            })\n    }  \n\n    render(){\n        return(\n            <div className=\"Parent\">\n                    <div className=\"Home\">\n                        <h1>\n                            Tic-Tac-Toe\n                            <sup>Online</sup>\n                        </h1>\n                        <h2>Because why not ?</h2>\n                        \n                        <h3>Get Started</h3>\n                        <div className=\"buttons\">\n                            <button \n                                className=\"createGameButton\" \n                                onClick={()=> this.createGame()}>\n                                    Create a new game\n                            </button>\n                            <button \n                                onClick={()=> this.joinGame()}>\n                                    Join a game\n                            </button>\n                        </div>\n                        { this.state.gameID === null ? null : \n                            <div className=\"createGame\">\n                                <h4>Game Created. Game ID :  {this.state.gameID}</h4>\n                                <p>Ask the other player to enter this ID while Joining the game.</p>\n                                <button onClick={this.startGame}>Start Game</button>\n                            </div>\n                        }\n\n                        { this.state.joinGameInput === false ? null : \n                            <div className=\"joinGame\">\n                                <input type=\"text\" name=\"gameID\" id=\"gameID\" placeholder=\"Game ID\"\n                                onChange={this.changeValue}\n                                />\n                                <button onClick={this.searchGame}>Join</button>\n                                <br/>\n                                <div>\n                                <br/><br/>\n\n                                    {!this.state.bothJoined ? null : <h3>Both players have already joined.</h3>}\n\n                                    {this.state.gameExists ? null : <h3>Game doesn't exist. Create one to start playing.</h3>}\n                                    \n                                </div>\n                            </div>\n                        }\n                        <br/>\n                    </div>\n                <div className=\"footerHome\">\n                            <Link to=\"/Info\">Learn More</Link>\n                            <p>Designed and Developed by <a href=\"http://bit.ly/nikketan\">Niketan Gulekar</a> &copy;2020</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React from 'react';\nimport './Game.css';\nimport io from 'socket.io-client';\nimport {Redirect, Link} from 'react-router-dom';\nimport toaster from 'toasted-notes';\nimport 'toasted-notes/src/styles.css';\n\nlet url = window.location.protocol + '//' + document.domain;\nif (window.location.port !== \"\") {\n\turl += ':' + window.location.port;\n}\nurl+='/Game'\nlet socket = io.connect(url);\nfunction Square(props) {\n\treturn (\n\t\t<button\n\t\t\tclassName=\"square\"\n\t\t\tonClick={props.onClick}\n\t\t>\n\t\t\t{props.value}\n\t\t</button>\n\t);\n}\n\nclass Board extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsquares: [],\n\t\t\txIsNext: true,\n\t\t\tenableRestart: false\n\t\t};\n\t\tthis.getBoard = this.getBoard.bind(this);\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.getBoard();\n\t\tsocket.on('moved', (data)=>this.updateBoard(data))\n\t\tsocket.on('restarted', ()=> {\n\t\t\t\tthis.getBoard();\n\t\t\t\ttoaster.notify('Game Restarted !', {\n\t\t\t\t\tduration: 2000\n\t\t\t  \t})\n\t\t}\n\t\t\t)\n\t}\n\n\tupdateBoard(data){\n\t\tlet pos = data.position\n\t\tlet updatedSquares = this.state.squares;\n\t\tupdatedSquares[pos] = data.player;\n\t\tthis.setState({squares: updatedSquares,\n\t\t\txIsNext: data.next === 'X' ? true : false})\n\t\tconst squares = updatedSquares;\n\t\tlet status = calculateWinner(squares);\n\t\tif (status) {\n\t\t\t\tthis.setState({enableRestart: true})\n\t\t}\n\t\t// this.setState({squares: data.board,\n\t\t// \txIsNext: data.next === 'X' ? true : false})\n\t}\n\n\tgetBoard(){\n\t\tthis.setState({enableRestart: false})\n\t\tfetch('/api/fetch/game/' + this.props.game_id )\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tif (data.result === 'success') {\n\t\t\t\t\tthis.setState({squares: data.board,\n\t\t\t\t\t\txIsNext: data.next === 'X' ? true : false})\n\t\t\t\t\tconst squares = data.board;\n\t\t\t\t\tlet status = calculateWinner(squares);\n\t\t\t\t\tif (status) {\n\t\t\t\t\t\t\tthis.setState({enableRestart: true})\n\t\t\t\t\t}\n\n\t\t\t\t} else if (data.result === 'fail') {\n\t\t\t\t\twindow.location.href='/'\n\t\t\t\t}\n\t\t\t});\n\t\t\n\t}\n\n\trestartGame(){\n\t\tsocket.emit('restartGame', {\"game_id\": this.props.game_id});\n\t\t\n\t}\n\n\thandleClick(i) {\n\t\tconst squares = this.state.squares.slice();\n\t\tlet status = calculateWinner(squares);\n\t\tif (status || squares[i]) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif (this.props.mode === 'create' && this.state.xIsNext === true) {\n\t\t\tsquares[i] = 'X'\n\t\t\t//this.state.xIsNext ? 'X' : 'O';\n\t\t\tthis.setState({\n\t\t\t\tsquares: squares,\n\t\t\t\txIsNext: false,\n\t\t\t});\n\t\t\n\t\t\tsocket.emit('move', {\"player\":squares[i], \"position\": i,\"game_id\": this.props.game_id});\n\t\t} else if (this.props.mode === 'join' && this.state.xIsNext === false){\n\t\t\tsquares[i] = 'O'\n\t\t\t\n\t\t\tthis.setState({\n\t\t\t\tsquares: squares,\n\t\t\t\txIsNext: true,\n\t\t\t});\n\t\t\n\t\t\tsocket.emit('move', {\"player\":squares[i], \"position\": i,\"game_id\": this.props.game_id});\n\t\t}\n\t\t\n\t\t\n\t}\n\trenderSquare(i) {\n\t\treturn (<Square\n\t\t\tvalue={this.state.squares[i]}\n\t\t\tonClick={() => this.handleClick(i)}\n\t\t/>);\n\t}\n\n\trender() {\n\t\tconst winner = calculateWinner(this.state.squares);\n\t\tlet status;\n\t\tif (winner) {\n\t\t\tstatus = winner;\n\t\t\t\n\t\t} else {\n\t\t\tstatus = 'Next player: ' + (this.state.xIsNext ? (this.props.mode === 'create' ? 'You' : 'X') : (this.props.mode === 'join' ? 'You' : 'O'));\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"game-board\">\n\t\t\t\t<div className=\"status\"><h2>{status}</h2></div>\n\t\t\t\t<div className=\"board-area\">\n\t\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t\t{this.renderSquare(0)}\n\t\t\t\t\t\t{this.renderSquare(1)}\n\t\t\t\t\t\t{this.renderSquare(2)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t\t{this.renderSquare(3)}\n\t\t\t\t\t\t{this.renderSquare(4)}\n\t\t\t\t\t\t{this.renderSquare(5)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t\t{this.renderSquare(6)}\n\t\t\t\t\t\t{this.renderSquare(7)}\n\t\t\t\t\t\t{this.renderSquare(8)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<p>Playing as : <b>{this.props.mode === 'create' ? 'X' : 'O'}</b></p>\n\t\t\t\t{this.state.enableRestart === true ? \n\t\t\t\t<button onClick={() => this.restartGame()}>Restart</button> : null}\n\t\t\t\t\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nclass Game extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t\t<div className=\"game\">\n\t\t\t\t\t<Board game_id={this.props.game_id} mode={this.props.mode}/>\n\t\t\t\t</div>\n\t\t);\n\t}\n}\n\nfunction calculateWinner(squares) {\n\tconst lines = [\n\t\t[0, 1, 2],\n\t\t[3, 4, 5],\n\t\t[6, 7, 8],\n\t\t[0, 3, 6],\n\t\t[1, 4, 7],\n\t\t[2, 5, 8],\n\t\t[0, 4, 8],\n\t\t[2, 4, 6],\n\t];\n\tfor (let i = 0; i < lines.length; i++) {\n\t\t\tconst [a, b, c] = lines[i];\n\t\t\tif (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n\t\t\t\treturn 'Winner :' + squares[a];\n\t\t\t\t\n\t\t\t}\n\t}\n\tif (squares.includes(null) === false) {\n\t\treturn 'Game Tied'\n\t} \n\treturn null;\n}\n\nclass App extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tonline: 0\n\t\t}\n\t}\n\tcomponentDidMount(){\n\t\tif (this.props.location.state !== undefined) {\n\t\t\tsocket.emit('join', {\"game_id\": this.props.location.state.gameID, \"player\" : (this.props.location.state.mode === 'create' ? \"X\" : \"O\")});\n\t\t}\n\t\tsocket.on('connected', (data)=>this.connected(data))\n\t\tsocket.on('disconnected', (data)=>this.connected(data))\n\t}\n\n\tconnected(data){\n\t\tthis.setState({online: data.online.length});\n\t}\n\n\tcomponentWillUnmount(){\n\t\tif (this.props.location.state !== undefined) {\n\t\t\tsocket.emit('leave', {\"game_id\": this.props.location.state.gameID, \"player\" : (this.props.location.state.mode === 'create' ? \"X\" : \"O\")});\n\t\t}\n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t(this.props.location.state === undefined ? <Redirect to='/' /> : \n\t\t\t<div className=\"window\">\n\t\t\t\t<Link to=\"/\" className=\"goHome\">Go Home</Link>\n\t\t\t\t<p className=\"online\">Joined : {this.state.online} </p>\n\t\t\t\t<div className=\"parent\">\n\t\t\t\t\t<Game game_id={this.props.location.state.gameID} mode={this.props.location.state.mode}/>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t<p className=\"gameID_Info\">Game : {this.props.location.state.gameID}</p>\n\t\t\t</div>\n\t\t\t)\n\t\t);\n\t}\n}\n\nexport default App;","import React, {Component} from 'react';\nimport './index.css'\nimport {Link} from 'react-router-dom';\nclass Info extends Component{\n    render(){\n        return(\n            <div>\n                <Link to=\"/\">Go Home</Link>\n                <div className=\"parent\">\n                    <div className=\"Info\">\n                        <Link to=\"/\" className=\"title\">\n                        <h1>\n                            Tic-Tac-Toe\n                            <sup>Online</sup>\n                        </h1>\n                        </Link>\n                        <div className=\"content\">\n                            <p>\n                                <b>How was this built ?</b><br/>\n                                Using <b>Python</b> along with <b>Flask</b> MicroFramework for the Server Side Handling. And <b>React</b> ofcourse. \n                                <br/><br/>\n                                <b>Why ?</b><br/>\n                                Because why not ?\n                                <br/><br/>\n                                <b>Wanna contribute ?</b><br/>\n                                <a href=\"https://github.com/NiketanG/tic-tac-toe-online\">Github Repo</a>\n                                <br/><br/>\n                                <a href=\"mailto:nikegulekar@gmail.com\">Contact Me</a>\n                            </p>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"footer\">\n                            <p>Designed and Developed by <a href=\"http://bit.ly/nikketan\">Niketan Gulekar</a> \t&copy;2020</p>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Info;","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Router, Switch, Route, BrowserRouter } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport Home from \"./Home\";\nimport App from \"./game\";\nimport Info from \"./info\"\n\nconst history = createBrowserHistory();\n\nclass Main extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/Game\" component={App} />\n          <Route path=\"/Info\" component={Info} />\n          <Route path=\"/\" component={Home} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nReactDOM.render(\n  <Router history={history}>\n    <Main history={history} />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}